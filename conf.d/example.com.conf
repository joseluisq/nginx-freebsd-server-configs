# example.com - HTTPS server

# example.com redirection
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  return 301 https://$host$request_uri;
}

# HTTPS example.com
server {
  listen    [::]:443 ssl http2 accept_filter=dataready;
  listen    443 ssl http2 accept_filter=dataready;
  root      /home/freebsd/www/example.com;

  # Include SSL default  settings
  include ssl.conf;

  # Redirect if host has www.*
  if ($host = www.example.com) {
    return 301      https://example.com$request_uri;
  }

  # Proxy to Varnish Cache (optional)
  location / {
     ## Proxy setup
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto https;
    proxy_set_header        X-Forwarded-Port 443;
    proxy_set_header        Host $host;
    proxy_set_header        X-Client-Verify  SUCCESS;
    proxy_set_header        X-Client-DN      $ssl_client_s_dn;
    proxy_set_header        X-SSL-Subject    $ssl_client_s_dn;
    proxy_set_header        X-SSL-Issuer     $ssl_client_i_dn;
    proxy_read_timeout      1800;
    proxy_connect_timeout   1800;
    proxy_redirect          off;
    # proxy_pass              http://127.0.0.1:80;

    # Expires headers for static files
    location ~* \.(7z|avi|bmp|bz2|css|csv|doc|docx|eot|flac|flv|gif|gz|ico|jpeg|jpg|js|less|mka|mkv|mov|mp3|mp4|mpeg|mpg|odt|otf|ogg|ogm|opus|pdf|png|ppt|pptx|rar|rtf|svg|svgz|swf|tar|tbz|tgz|ttf|txt|txz|wav|webm|webp|woff|woff2|xls|xlsx|xml|xz|zip)$ {
      expires 30d;
      log_not_found off;
      access_log off;
      add_header Pragma public;
      add_header Cache-Control "public";
    }

  }

}

